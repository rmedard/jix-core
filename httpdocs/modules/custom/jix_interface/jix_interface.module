<?php
/**
 * @file
 * A description of what your module does.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\field\Entity\FieldConfig;
use Drupal\jix_settings\Form\WebsiteSettingsForm;
use Drupal\node\NodeInterface;


/**
 * Implements hook_theme().
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */
function jix_interface_theme($existing, $type, $theme, $path): array
{
  return [
    'jix_upload_cv' => [
      'variables' => [
        'label' => ''
      ]
    ],
    'jix_job_summary' => [
      'variables' => [
        'job' => [],
        'viewsCount' => 0,
        'lang' => ''
      ]
    ],
    'jix_job_employer' => [
      'variables' => [
        'employer' => [],
        'pageNodeBundle' => ''
      ]
    ],
    'jix_posting_plans_page' => [
      'variables' => [
        'plans' => [],
        'header_text' => '',
        'footer_text' => ''
      ]
    ],
    'jix_copyright' => [
      'variables' => [
        'year' => date('Y'),
        'terms' => t('Terms of Use'),
        'privacy' => t('Privacy Policy'),
        'owner' => Drupal::config('system.site')->get('owner'),
        'admin' => t('Site administration')
      ]
    ],
    'jix_address' => [
      'variables' => [
        'title' => t('Get in touch'),
        'owner' => Drupal::config(WebsiteSettingsForm::SETTINGS)->get('site_owner'),
        'address1' => Drupal::config(WebsiteSettingsForm::SETTINGS)->get('site_address_line_1'),
        'address2' => Drupal::config(WebsiteSettingsForm::SETTINGS)->get('site_address_line_2'),
        'phone' => Drupal::config(WebsiteSettingsForm::SETTINGS)->get('site_phone'),
      ]
    ],
    'jix_services' => [
      'variables' => [
        'title' => t('Our services'),
        'services' => null
      ]
    ],
    'jix_jobs_sites' => [
      'variables' => [
        'title' => t('Jobs elsewhere'),
        'sites' => []
      ]
    ],
    'jix_realtime_stats' => [
      'variables' => [
        'title' => t('Realtime figures'),
        'jobs_count' => 0,
        'employers_count' => 0,
        'candidates_count' => 0
      ]
    ],
    'jix_social_media_buttons' => [
      'variables' => [
        'facebook' => '',
        'twitter' => '',
        'instagram' => '',
        'youtube' => ''
      ]
    ],
    'jix_similar_jobs' => [
      'variables' => [
        'jobs' => []
      ]
    ]
  ];
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 * @param EntityInterface $entity
 */
function jix_interface_node_presave(EntityInterface $entity)
{
  if ($entity instanceof NodeInterface and $entity->bundle() == 'job') {
    if ($entity->isNew()) {
      $locationObj = Drupal::service('smart_ip.smart_ip_location');
      $location = $locationObj->get('city') . ', ' . $locationObj->get('country') . '(' . $locationObj->get('countryCode') . ')';
      $entity->set('field_job_creator_location', $location);
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_create().
 * @param EntityInterface $entity
 */
function jix_interface_node_create(EntityInterface $entity)
{
  if ($entity instanceof NodeInterface and $entity->bundle() == 'job') {
    $postingPlan = Drupal::request()->get('posting_plan');
    if (isset($postingPlan) && strlen($postingPlan) > 0) {
      $entity->set('field_job_posting_plan', $postingPlan);
    }
  }
}

/**
 * Implements hook_field_widget_form_alter().
 * @param $element
 * @param FormStateInterface $form_state
 * @param $context
 */
function jix_interface_field_widget_form_alter(&$element, FormStateInterface $form_state, $context)
{
  $field_definition = $context['items']->getFieldDefinition();

  // Base fields are not configurable.
  if (!$field_definition instanceof FieldConfig) {
    return;
  }
  if ($field_definition->getName() === 'field_job_full_description'
    or $field_definition->getName() === 'field_employer_summary') {
    // Set only full_html as allowed format.
    $element['#allowed_formats'] = ['full_html'];
    // Add after build to remove the help wrapper and text.
    $element['#after_build'][] = 'jix_interface_after_build';
  }
}

function jix_interface_after_build(array $element, FormStateInterface $form_state): array
{
  unset($element['format']['help']);
  unset($element['format']['guidelines']);
  unset($element['format']['#type']);
  unset($element['format']['#theme_wrappers']);
  return $element;
}

/**
 * Implements hook_views_data_alter().
 */
function jix_interface_views_data_alter(array &$data)
{
  $data['node']['job_submissions_count_views_field'] = [
    'title' => t('Job submissions count'),
    'field' => [
      'title' => t('Job submissions count'),
      'help' => t('Number of submissions a job has.'),
      'id' => 'job_submissions_count_views_field',
    ],
  ];
}
